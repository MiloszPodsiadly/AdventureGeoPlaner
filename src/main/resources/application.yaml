# ── Top‑level Spotify URLs for EVERY profile ──
spotify:
  token-url: https://accounts.spotify.com/api/token
  api-url:   https://api.spotify.com/v1

---

# ── Default profile (you can leave this as dev, docker, or remove altogether) ──
spring:
  profiles:
    active: docker

  application:
    name: tripplanner

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

  jackson:
    serialization:
      indent_output: false

  security:
    oauth2:
      client:
        registration:
          spotify:
            authorization-grant-type: authorization_code
            scope: user-read-email,playlist-read-private
            client-name: Spotify
        provider:
          spotify:
            authorization-uri: https://accounts.spotify.com/authorize
            token-uri:     https://accounts.spotify.com/api/token
            user-info-uri: https://api.spotify.com/v1/me
            user-name-attribute: id

jwt:
  secret: globalJwtSecret12345678901234567890

springdoc:
  swagger-ui:
    enabled: false

nominatim:
  base-url: https://nominatim.openstreetmap.org
  user-agent: trip-planner/1.0 (common@mydomain.com)

---

# ── DEV profile ──
spring:
  config:
    activate:
      on-profile: dev

  application:
    name: tripplanner-dev

  datasource:
    url: jdbc:postgresql://localhost:5432/AdventureGeoPlanner
    username: kodilla_user
    password: kodilla_password

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  jackson:
    serialization:
      indent_output: true

  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id:     d9a786a96ea44f9bbfa5228457b11589
            client-secret: 1c7be3850109498f953b58e9cde315bc
            redirect-uri:  http://127.0.0.1:8080/auth/spotify/success

server:
  port: 8080

debug: true

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

nominatim:
  user-agent: trip-planner-dev/1.0 (dev@mydomain.com)

---

# ── TEST profile ──
spring:
  config:
    activate:
      on-profile: test

  application:
    name: tripplanner-test

  datasource:
    url: jdbc:postgresql://localhost:5432/AdventureGeoPlanner
    username: kodilla_user
    password: kodilla_password

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id:     d9a786a96ea44f9bbfa5228457b11589
            client-secret: 1c7be3850109498f953b58e9cde315bc
            redirect-uri:  http://127.0.0.1:8080/auth/spotify/success

server:
  port: 8081

debug: true

jwt:
  secret: globalJwtSecret12345678901234567890

nominatim:
  user-agent: trip-planner-test/1.0 (test@mydomain.com)

---

# ── DOCKER profile ──
spring:
  config:
    activate:
      on-profile: docker

  application:
    name: tripplanner-docker

  datasource:
    url: jdbc:postgresql://postgres:5432/AdventureGeoPlanner
    username: kodilla_user
    password: kodilla_password

  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id:     d9a786a96ea44f9bbfa5228457b11589
            client-secret: 1c7be3850109498f953b58e9cde315bc
            redirect-uri:  http://127.0.0.1:8080/auth/spotify/success
            authorization-grant-type: authorization_code
            scope: user-read-email,playlist-read-private
        provider:
          spotify:
            authorization-uri:  https://accounts.spotify.com/authorize
            token-uri:          https://accounts.spotify.com/api/token
            user-info-uri:      https://api.spotify.com/v1/me
            user-name-attribute: id

server:
  port: 8080

debug: false

nominatim:
  user-agent: trip-planner-docker/1.0 (docker@mydomain.com)

